-- 한번 더 실습

SELECT SYSDATE
FROM DUAL; -- 가상테이블

SELECT LENGTH('오라클'), LENGTHB('오라클')
FROM DUAL;

SELECT LENGTH('oracle'), LENGTHB('oracle')
FROM DUAL;

SELECT EMP_NAME, LENGTH(EMP_NAME), LENGTHB(EMP_NAME),
        EMAIL, LENGTH(EMAIL), LENGTHB(EMAIL)
FROM EMPLOYEE; -- 매행마다 실행 => 단일행

-- INSTR는 중요!
SELECT INSTR('AABAACAABBAA', 'B') FROM DUAL; => B가 몇번째에있는지 출력해줌
SELECT INSTR('AABAACAABBAA', 'B', '1') FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', -1) FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', '1', '2') FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', -1, 3) FROM DUAL;

SELECT EMAIL, INSTR(EMAIL, '_', 1,1) AS "_위치", INSTR(EMAIL, '@') AS "@위치"
FROM EMPLOYEE;

SELECT SUBSTR('TODAY''S OOTD', 7) FROM DUAL; -- 7번째 글자부터 출력하겠다.
SELECT SUBSTR('TODAY''S OOTD', 5, 2) FROM DUAL;
SELECT SUBSTR('TODAY''S OOTD', -6, 6) FROM DUAL;

SELECT EMP_NAME, EMP_NO, SUBSTR(EMP_NO, 8,1) AS "성별"
FROM EMPLOYEE;

-- 여자사원들만 조회
SELECT EMP_NAME, EMP_NO, SUBSTR(EMP_NO, 8,1) AS "성별"
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO,8,1) IN ('2' , '4')
ORDER BY EMP_NAME; -- 오름차순으로 정렬 <기본값이 오름차순>

-- 함수 중첩사용
SELECT EMP_NAME, EMAIL, EMP_NO, SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')-1) --이메일에서 ID만을 추출
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO,8,1) IN ('2' ,'4') -- 여자사원들만을 추출하는 조건
ORDER BY EMP_NAME; -- 이름 오름차순 

-- 문자열을 조회할때 동일감있게 조회하고자 LPAD / RPAD
-- LPAD 왼쪽공백 // RPAD 오른쪽 공백

-- 남자사원의 사번과 이름 주민번호 아이디를 추출하고, 주민번호는 성별까지만 나타내고 *로 표시 (별칭달기) , 또한 이름을 오름차순 정렬하시오.
SELECT EMP_ID AS "사번", EMP_NAME AS "이름", RPAD(SUBSTR(EMP_NO,1,8) , 14 , '*') AS "주민번호(정보보호)", SUBSTR(EMAIL,1, INSTR(EMAIL, '@')-1) AS "아이디"
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO, 8,1) IN ('1','3')
ORDER BY EMP_NAME;

-- 반올림 함수
SELECT ROUND(45.789) FROM DUAL;  -- ROUND(숫자, 반올림할 위치) 위치를 생략하면 0번째 자리 반올림 0번째 자리는 5
SELECT ROUND(45.789,1) FROM DUAL;
SELECT ROUND(45.789,-1) FROM DUAL;

-- 올림처리함수
SELECT CEIL(467.98) FROM DUAL; -- 위치지정불가

-- 버림처리함수 -- 위치지정 절대불가
SELECT FLOOR(456.265) FROM DUAL;
-- 버림처리함수 -- 위치지정 완전가능
SELECT TRUNC(456.265, 0) FROM DUAL;
SELECT TRUNC(456.265, 2) FROM DUAL;
SELECT TRUNC(456.265, -2) FROM DUAL;
SELECT TRUNC(456.265, -1) FROM DUAL;

-- 날짜처리함수
SELECT SYSDATE FROM DUAL;

-- 두 날짜 사이의 개월수
SELECT EMP_ID, EMP_NAME, HIRE_DATE, FLOOR(SYSDATE - HIRE_DATE)||'일' AS "근속일수",
CEIL(MONTHS_BETWEEN(SYSDATE, HIRE_DATE))||'개월' AS "근속개월"
FROM EMPLOYEE;

SELECT FLOOR(SYSDATE - (TO_DATE('981118', 'RRMMDD')))||'일' AS "수빈탄생일",
CEIL(MONTHS_BETWEEN(SYSDATE, '98/11/18'))||'개월' AS "수빈이의 개월수"
FROM DUAL;

-- 특정날짜에서 해당 숫자만큼 개월수 더하기
SELECT ADD_MONTHS(SYSDATE, 7) FROM DUAL;

-- 특정날짜이후에 가까운 해당요일 날짜 반환 1.일요일 
SELECT SYSDATE, NEXT_DAY(SYSDATE,6) FROM DUAL;

-- 마지막 날짜
SELECT LAST_DAY('98/11/18')
FROM DUAL;

-- 특정 날짜로부터 년도|월|일 값 추출
SELECT EXTRACT(YEAR FROM HIRE_DATE)
FROM EMPLOYEE;

SELECT ROUND(123.456, -2) FROM DUAL;

SELECT EMP_NAME, EMAIL, PHONE
FROM EMPLOYEE
ORDER BY 3 DESC NULLS LAST;

-- < 형변환 함수 >
SELECT TO_CHAR(1789) FROM DUAL; -- 숫자=>문자타입으로 변경되어 출력
SELECT TO_CHAR(1789, '99999') FROM DUAL; -- 5칸짜리 공간 확보, 오른쪽 정렬, 빈칸 공백 '88888','77777' 은 안됨. '99999'만가능
SELECT TO_CHAR(1789, '00000') FROM DUAL; -- 빈칸을 0으로 채운다. 따라서 01789 출력
SELECT TO_CHAR(1789, 'L99999') FROM DUAL; -- 현재 설정된 나라의 화폐단위 (L:LOCAL)
SELECT TO_CHAR(1789, '$99999') FROM DUAL; -- $화폐단위
SELECT TO_CHAR(1789, 'L99,999') FROM DUAL; -- \1,789 

-- 날짜타입 => 문자타입
SELECT SYSDATE FROM DUAL;
SELECT TO_CHAR(SYSDATE) FROM DUAL; -- 문자로 출력
SELECT TO_CHAR(SYSDATE, 'AM HH:MI:SS') FROM DUAL; -- AM,PM:오전/오후 HH:시 MI:분 SS:초
SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') FROM DUAL; --24시간형식
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD DAY') FROM DUAL; -- YYYY-MM-DD 'D'요일 로출력 (금요일)
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD DY') FROM DUAL; -- YYYY-MM-DD 'D' 로 출력 (금)
SELECT TO_CHAR(SYSDATE, 'MON, YYYY') FROM DUAL; -- 월과 년도만 문자로 추출

SELECT 






